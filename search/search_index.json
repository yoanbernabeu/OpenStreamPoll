{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OpenStreamPoll Documentation","text":""},{"location":"#welcome-to-openstreampoll","title":"Welcome to OpenStreamPoll","text":"<p>OpenStreamPoll is an open-source live polling platform specifically designed for streamers. It enables real-time audience engagement through interactive polls, featuring instant results and seamless integration with popular streaming tools.</p>"},{"location":"#quick-start","title":"Quick Start","text":"Quick InstallDockerDevelopment <pre><code>git clone https://github.com/yoanbernabeu/OpenStreamPoll.git\ncd OpenStreamPoll\nmake deploy\n</code></pre> <pre><code>docker run -d -p 80:80 \\\n  -e SERVER_NAME=:80 \\\n  -e APP_ENV=prod \\\n  --name openstreampoll \\\n  yoanbernabeu/openstreampoll:latest\n</code></pre> <pre><code>git clone https://github.com/yoanbernabeu/OpenStreamPoll.git\ncd OpenStreamPoll\nmake first-install\n</code></pre>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Live Polling System</li> <li>Create instant polls</li> <li>Real-time results</li> <li> <p>Multiple choice questions</p> </li> <li> <p>Stream Integration</p> </li> <li>Native OBS integration</li> <li>Customizable overlays</li> <li> <p>QR code display</p> </li> <li> <p>Easy Administration</p> </li> <li>User-friendly interface</li> <li>Poll management</li> <li>Results tracking</li> </ul>"},{"location":"#project-overview","title":"Project Overview","text":"<p>OpenStreamPoll is built with:</p> <ul> <li>PHP 8.3 with Symfony 7.2</li> <li>Alpine.js &amp; HTMX</li> <li>Tailwind CSS with DaisyUI</li> <li>Docker &amp; FrankenPHP</li> </ul> <p>For detailed information, check out:</p> <ul> <li>Installation Guide</li> <li>Usage Guide</li> <li>GitHub Repository</li> </ul>"},{"location":"installation/","title":"Installation","text":"<p>This page details the different methods for installing OpenStreamPoll.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before starting the installation, make sure you have:</p> <ul> <li>PHP 8.3 or higher</li> <li>Composer</li> <li>Symfony CLI</li> <li>SQLite</li> <li>Make</li> <li>Docker (recommended)</li> </ul>"},{"location":"installation/#1-production-deployment-with-make-recommended","title":"1. Production Deployment with Make (Recommended)","text":""},{"location":"installation/#quick-steps","title":"Quick Steps","text":"<pre><code># Clone the repository\ngit clone https://github.com/yoanbernabeu/OpenStreamPoll.git\ncd OpenStreamPoll\n\n# Launch deployment\nmake deploy\n</code></pre>"},{"location":"installation/#process-details","title":"Process Details","text":"<p>The <code>make deploy</code> command will automatically:</p> <ol> <li>Create a <code>compose.prod.yaml</code> file from the template</li> <li>Ask for your domain name</li> <li>Start Docker containers</li> <li>Create and configure the database</li> <li>Create the administrator account</li> </ol>"},{"location":"installation/#2-manual-production-deployment","title":"2. Manual Production Deployment","text":"<p>If you prefer to control each step:</p> <pre><code># Clone the repository\ngit clone https://github.com/yoanbernabeu/OpenStreamPoll.git\ncd OpenStreamPoll\n\n# Create production configuration\ncp compose.yaml compose.prod.yaml\n\n# Configure domain in compose.prod.yaml\n# SERVER_NAME=yourdomain.com (use :80 without SSL)\n\n# Start services\ndocker compose -f compose.prod.yaml up -d\n\n# Create database\ndocker compose -f compose.prod.yaml exec openstreampoll php bin/console doctrine:database:create\n\n# Run migrations\ndocker compose -f compose.prod.yaml exec openstreampoll php bin/console doctrine:migrations:migrate --no-interaction\n\n# Create admin user\ndocker compose -f compose.prod.yaml exec openstreampoll php bin/console app:create-user &lt;username&gt; &lt;password&gt;\n</code></pre>"},{"location":"installation/#3-development-installation","title":"3. Development Installation","text":"<p>For local development with hot-reload:</p> <pre><code># Initial installation\nmake first-install\n\n# Normal startup\nmake start\n\n# Useful commands\nmake stop           # Stop server\nmake reset-db       # Reset database\nmake tests         # Run tests\nmake before-commit # Pre-commit checks\n</code></pre>"},{"location":"installation/#4-quick-local-testing-with-docker","title":"4. Quick Local Testing with Docker","text":"<p>For rapid testing:</p> <pre><code># Start container\ndocker run -d -p 80:80 \\\n  -e SERVER_NAME=:80 \\\n  -e APP_ENV=prod \\\n  --name openstreampoll \\\n  yoanbernabeu/openstreampoll:latest\n\n# Database setup\ndocker exec openstreampoll php bin/console doctrine:database:create\ndocker exec openstreampoll php bin/console doctrine:migrations:migrate --no-interaction\ndocker exec openstreampoll php bin/console app:create-user &lt;username&gt; &lt;password&gt;\n</code></pre> <p>The application will be accessible at <code>http://localhost</code></p>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#common-errors","title":"Common Errors","text":"<ol> <li>Permission Issues</li> <li>Check write permissions on the <code>var/</code> directory</li> <li> <p>Use <code>chmod -R 777 var/</code> if needed</p> </li> <li> <p>Database Errors</p> </li> <li>Verify SQLite is installed</li> <li> <p>Ensure database directory is writable</p> </li> <li> <p>Docker Container Issues</p> </li> <li>Check logs with <code>docker compose logs</code></li> <li>Ensure ports are not already in use</li> </ol>"},{"location":"installation/#support","title":"Support","text":"<p>If you encounter problems:</p> <ol> <li>Check GitHub issues</li> <li>Create a new issue if needed</li> <li>For security concerns, contact the maintainer directly</li> </ol>"},{"location":"usage/","title":"Usage Guide","text":""},{"location":"usage/#creating-polls","title":"Creating Polls","text":"Basic CreationAdvanced OptionsManagement <ol> <li>Log in to the admin panel</li> <li>Click \"New Poll\"</li> <li>Enter your question</li> <li>Add answer options</li> <li>Click \"Create\"</li> </ol> <ul> <li>Set poll duration</li> <li>Configure voting limits</li> <li>Enable/disable features</li> <li>Save as draft</li> </ul> <ul> <li>Edit existing polls</li> <li>View results</li> <li>Close/reopen polls</li> <li>Delete polls</li> </ul>"},{"location":"usage/#obs-integration","title":"OBS Integration","text":"Poll DisplayQR CodeAdmin Panel <ol> <li>Add Browser Source in OBS</li> <li>Enter URL: <code>https://yourdomain.com/obs</code></li> <li>Set dimensions (1920x1080 recommended)</li> <li>Position as needed</li> </ol> <ol> <li>Add Browser Source</li> <li>URL: <code>https://yourdomain.com/obs/qr</code></li> <li>Position in corner of stream</li> <li>Viewers scan to participate</li> </ol> <ol> <li>Open OBS Docks menu</li> <li>Add Custom Browser Dock</li> <li>URL: <code>https://yourdomain.com/admin</code></li> <li>Manage polls directly from OBS</li> </ol>"},{"location":"usage/#best-practices","title":"Best Practices","text":"Poll CreationStream IntegrationEngagement <ul> <li>Keep questions clear</li> <li>Limit options (max 5)</li> <li>Use appropriate timing</li> <li>Test before going live</li> </ul> <ul> <li>Position polls strategically</li> <li>Use consistent styling</li> <li>Test visibility on all layouts</li> <li>Consider mobile viewers</li> </ul> <ul> <li>Announce polls clearly</li> <li>Give adequate voting time</li> <li>Discuss results live</li> <li>Thank participants</li> </ul>"}]}