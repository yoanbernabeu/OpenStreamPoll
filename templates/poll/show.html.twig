{% extends 'base.html.twig' %}

{% block title %}{{ poll.title }}{% endblock %}

{% block body %}
<div class="min-h-screen bg-base-200 py-2">
    <div class="container mx-auto px-2">
        {# Header Card combin√© #}
        <div class="card bg-base-100 shadow-xl mb-3">
            <div class="card-body p-3">
                <div class="flex flex-col sm:flex-row items-center gap-2 justify-between">
                    <h1 class="text-lg font-bold text-center sm:text-left">{{ poll.title }}</h1>
                    <div x-data="timer('{{ poll.endAt|date('Y-m-d\\TH:i:s\\Z') }}')" 
                         class="flex items-center gap-2">
                        <div class="font-mono text-xl">
                            <span x-text="minutes">00</span>:<span x-text="seconds">00</span>
                        </div>
                        <span class="text-xs opacity-75">remaining</span>
                    </div>
                </div>
            </div>
        </div>

        {# Options Card #}
        <div class="card bg-base-100 shadow-xl">
            <div class="card-body p-3">
                {{ form_start(form) }}
                    <div class="flex flex-col gap-2">
                        {% for child in form.choice %}
                            <label class="flex items-start btn btn-outline h-auto py-4 px-6 cursor-pointer hover:scale-[1.01] transition-transform">
                                <div class="flex items-start gap-4 w-full">
                                    {{ form_widget(child, {'attr': {'class': 'radio radio-primary mt-1.5'}}) }}
                                    <span class="text-lg text-left flex-1">{{ child.vars.label }}</span>
                                </div>
                            </label>
                        {% endfor %}
                    </div>

                    <div class="mt-4 text-center">
                        <button type="submit" class="btn btn-primary">
                            Submit Vote
                        </button>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>

        {# Visitor ID #}
        <div class="mt-4 text-center">
            <p class="text-xs opacity-50">Visitor ID: {{ voterId }}</p>
        </div>
    </div>
</div>

<script>
document.addEventListener('alpine:init', () => {
    Alpine.data('timer', (endDate) => ({
        minutes: '00',
        seconds: '00',
        isExpired: false,
        
        init() {
            this.updateTimer()
            setInterval(() => this.updateTimer(), 1000)
        },

        updateTimer() {
            const end = new Date(endDate)
            const now = new Date()
            const diff = end - now

            if (diff <= 0) {
                this.isExpired = true
                this.minutes = '00'
                this.seconds = '00'
                return
            }

            const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))
            const seconds = Math.floor((diff % (1000 * 60)) / 1000)

            this.minutes = minutes.toString().padStart(2, '0')
            this.seconds = seconds.toString().padStart(2, '0')
        }
    }))
})
</script>
{% endblock %}
